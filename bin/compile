#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>
# $HOME: /app

# fail fast
set -e

BUILD_DIR=${1:-.}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

HEROKU_DIR=$BUILD_DIR/.heroku
BIN_DIR=$HEROKU_DIR/bin

# To enable the local source build cache path, copy the files and match the build path with the startup path.
cp -rpT $BUILD_DIR $HOME
cd $HOME

# Variables for GCC version and dependencies
GCC_VERSION="13.2.0"
GMP_VERSION="6.2.1"
MPFR_VERSION="4.2.0"
MPC_VERSION="1.3.1"

# Download and extract GCC and its dependencies
echo "-----> Downloading gcc $GCC_VERSION files"
mkdir -p $HEROKU_DIR/vendor
cd $HEROKU_DIR/vendor
wget https://ftp.gnu.org/gnu/gcc/gcc-$GCC_VERSION/gcc-$GCC_VERSION.tar.gz
tar -zxvf gcc-$GCC_VERSION.tar.gz
rm -f gcc-$GCC_VERSION.tar.gz

echo "-----> Downloading gmp $GMP_VERSION files"
wget https://ftp.gnu.org/gnu/gmp/gmp-$GMP_VERSION.tar.xz
tar -xf gmp-$GMP_VERSION.tar.xz
mv gmp-$GMP_VERSION gcc-$GCC_VERSION/gmp

echo "-----> Downloading mpfr $MPFR_VERSION files"
wget https://www.mpfr.org/mpfr-$MPFR_VERSION/mpfr-$MPFR_VERSION.tar.xz
tar -xf mpfr-$MPFR_VERSION.tar.xz
mv mpfr-$MPFR_VERSION gcc-$GCC_VERSION/mpfr

echo "-----> Downloading mpc $MPC_VERSION files"
wget https://ftp.gnu.org/gnu/mpc/mpc-$MPC_VERSION.tar.gz
tar -zxvf mpc-$MPC_VERSION.tar.gz
mv mpc-$MPC_VERSION gcc-$GCC_VERSION/mpc

# Compile GCC
echo "-----> Making..."
mkdir gcc-$GCC_VERSION-build
cd gcc-$GCC_VERSION-build
../gcc-$GCC_VERSION/configure --prefix=$HEROKU_DIR/gcc-$GCC_VERSION/ --disable-multilib --enable-languages=c,c++

make -j$(nproc)
make install

echo "-----> Cleaning up..."
cd ..
rm -rf gcc-$GCC_VERSION
rm -rf gcc-$GCC_VERSION-build

# Set environment variables
PROFILE_PATH="$BUILD_DIR/.profile.d/gcc.sh"
mkdir -p $(dirname $PROFILE_PATH)
echo "export PATH=\"$HEROKU_DIR/gcc-$GCC_VERSION/bin:\$PATH\"" >> $PROFILE_PATH
echo "export LD_LIBRARY_PATH=\"$HEROKU_DIR/gcc-$GCC_VERSION/lib64:\$LD_LIBRARY_PATH\"" >> $PROFILE_PATH

set +e
